"use strict";(self.webpackChunkzeuz_docs=self.webpackChunkzeuz_docs||[]).push([[3859],{28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var s=r(96540);const t={},i=s.createContext(t);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}},60833:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"zeuz-node/actions/Web/capture-network-log","title":"Capture Network Log","description":"Captures and filters network activity, such as API requests and responses from a Chromium-based browser using Selenium with performance logging enabled.","source":"@site/docs/zeuz-node/actions/Web/capture-network-log.md","sourceDirName":"zeuz-node/actions/Web","slug":"/zeuz-node/actions/Web/capture-network-log","permalink":"/docs/zeuz-node/actions/Web/capture-network-log","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"capture-network-log","title":"Capture Network Log"},"sidebar":"docsSidebar","previous":{"title":"Introduction of Web Actions","permalink":"/docs/zeuz-node/actions/Web/actions-web"},"next":{"title":"Change Attribute Value","permalink":"/docs/zeuz-node/actions/Web/change-attribute-value"}}');var t=r(74848),i=r(28453);const l={id:"capture-network-log",title:"Capture Network Log"},o=void 0,d={},a=[{value:"Purpose",id:"purpose",level:2},{value:"Action Type",id:"action-type",level:2},{value:"Description",id:"description",level:2},{value:"Supported Fields",id:"supported-fields",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Basic Logging",id:"example-1-basic-logging",level:3},{value:"Example 2: Filtered Logging and Saving",id:"example-2-filtered-logging-and-saving",level:3},{value:"Output",id:"output",level:2},{value:"\u26a0\ufe0f Pre-requisites",id:"\ufe0f-pre-requisites",level:2},{value:"Internal Details",id:"internal-details",level:2},{value:"Test Case Scenario of &quot;Capture Network Log&quot; Action",id:"test-case-scenario-of-capture-network-log-action",level:2},{value:"Title",id:"title",level:3},{value:"Scenario Overview",id:"scenario-overview",level:3},{value:"Steps to Follow",id:"steps-to-follow",level:3},{value:"Actions",id:"actions",level:3},{value:"Capture Network Log - Start",id:"capture-network-log---start",level:4},{value:"Capture Network Log - Stop",id:"capture-network-log---stop",level:4},{value:"Expected Result",id:"expected-result",level:3},{value:"Common Errors and Fixes",id:"common-errors-and-fixes",level:3},{value:"Additional Tips for this Action",id:"additional-tips-for-this-action",level:2},{value:"Error Handling for Capture Network Log action",id:"error-handling-for-capture-network-log-action",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Captures and filters network activity, such as API requests and responses from a Chromium-based browser using Selenium with performance logging enabled."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,t.jsx)(n.p,{children:"It is used to monitor, capture, and optionally filter HTTP traffic from the browser during automation runs. It is particularly useful for validating API calls, response statuses, methods, and domains within a test step."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"action-type",children:"Action Type"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Action Name"}),": ",(0,t.jsx)(n.code,{children:"capture network log"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Action Category"}),": ",(0,t.jsx)(n.code,{children:"selenium action"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Modes"}),": ",(0,t.jsx)(n.code,{children:"start"}),", ",(0,t.jsx)(n.code,{children:"stop"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"This action operates in two phases:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["Start Phase (",(0,t.jsx)(n.code,{children:"start"}),")"]}),": Initializes and starts listening to the browser's network activity."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["Stop Phase (",(0,t.jsx)(n.code,{children:"stop"}),")"]}),": Collects, filters, and optionally saves the captured network logs for validation or debugging purposes."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Captured logs include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"URL"}),"\n",(0,t.jsx)(n.li,{children:"Status Code"}),"\n",(0,t.jsx)(n.li,{children:"Request Method"}),"\n",(0,t.jsx)(n.li,{children:"MIME Type"}),"\n",(0,t.jsx)(n.li,{children:"Resource Type"}),"\n",(0,t.jsx)(n.li,{children:"Timestamp"}),"\n",(0,t.jsx)(n.li,{children:"Response Body (if specified)."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"supported-fields",children:"Supported Fields"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Field Name"}),(0,t.jsx)(n.th,{children:"Sub Field"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"capture network log"}),(0,t.jsx)(n.td,{children:"selenium action"}),(0,t.jsx)(n.td,{children:"start/stop"}),(0,t.jsx)(n.td,{children:"Marks the beginning or end of network logging."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"save"}),(0,t.jsx)(n.td,{children:"input parameter"}),(0,t.jsx)(n.td,{children:"variable name"}),(0,t.jsx)(n.td,{children:"Shared variable to save the collected API logs."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"filter domain"}),(0,t.jsx)(n.td,{children:"input parameter"}),(0,t.jsx)(n.td,{children:"string (comma-separated)"}),(0,t.jsx)(n.td,{children:"Only logs from matching domains will be captured."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"include status code"}),(0,t.jsx)(n.td,{children:"input parameter"}),(0,t.jsx)(n.td,{children:"int / range"}),(0,t.jsxs)(n.td,{children:["Filters responses by HTTP status codes (e.g., ",(0,t.jsx)(n.code,{children:"200"}),", ",(0,t.jsx)(n.code,{children:"400-499"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"include request method"}),(0,t.jsx)(n.td,{children:"input parameter"}),(0,t.jsx)(n.td,{children:"string (comma-separated)"}),(0,t.jsxs)(n.td,{children:["Filters requests by method (",(0,t.jsx)(n.code,{children:"GET"}),", ",(0,t.jsx)(n.code,{children:"POST"}),", etc.)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"include response body"}),(0,t.jsx)(n.td,{children:"input parameter"}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsxs)(n.td,{children:["If ",(0,t.jsx)(n.code,{children:"true"}),", attempts to capture and attach response body to log."]})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"example-1-basic-logging",children:"Example 1: Basic Logging"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Field                  Sub Field          Value\r\ncapture network log    selenium action    start\r\n\r\n...\r\ncapture network log    selenium action    stop\r\n\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"This starts and stops network traffic capture without applying any filters. The logs are processed but not saved."})}),"\n",(0,t.jsx)(n.h3,{id:"example-2-filtered-logging-and-saving",children:"Example 2: Filtered Logging and Saving"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Field                      Sub Field           Value\r\nsave                       input parameter     api_logs\r\nfilter domain              input parameter     zeuz.ai\r\ninclude status code        input parameter     201, 400-504\r\ninclude request method     input parameter     GET, POST\r\ninclude response body      input parameter     false\r\ncapture network log        selenium action     stop\r\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"This configuration:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Filters by domain containing ",(0,t.jsx)(n.code,{children:"zeuz.ai"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Includes only ",(0,t.jsx)(n.code,{children:"GET"})," and ",(0,t.jsx)(n.code,{children:"POST"})," methods."]}),"\n",(0,t.jsxs)(n.li,{children:["Filters status codes ",(0,t.jsx)(n.code,{children:"201"}),", and those ranging from ",(0,t.jsx)(n.code,{children:"400"})," to ",(0,t.jsx)(n.code,{children:"504"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Does not include the response body."}),"\n",(0,t.jsxs)(n.li,{children:["Saves the filtered network logs into the variable ",(0,t.jsx)(n.code,{children:"api_logs"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"output",children:"Output"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns"}),": ",(0,t.jsx)(n.code,{children:'"passed"'})," if successful."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sets Variable"})," (optional): A list of filtered API events stored in the specified variable."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Log Entry Fields"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"url"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"status"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"method"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"mimeType"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"type"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"timestamp"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"body"})," (optional)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-pre-requisites",children:"\u26a0\ufe0f Pre-requisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Browser"}),": Must be Chromium-based (e.g., Chrome)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Performance Logging"}),": Must be enabled through browser options."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"chrome_options.set_capability('goog:loggingPrefs', {'performance': 'ALL'})\r\n\r\n#For Automation Browser, you need to add this line on action 'go to link'\r\n> capabilities  |  shared capability  |  {\"goog:loggingPrefs\": {\"performance\": \"ALL\"}}\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"internal-details",children:"Internal Details"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Utilizes Selenium's ",(0,t.jsx)(n.code,{children:'get_log("performance")'})," API."]}),"\n",(0,t.jsxs)(n.li,{children:["Automatically filters out static resource requests (e.g., ",(0,t.jsx)(n.code,{children:".css"}),", ",(0,t.jsx)(n.code,{children:".jpg"}),", ",(0,t.jsx)(n.code,{children:"image/*"}),", etc)."]}),"\n",(0,t.jsx)(n.li,{children:"Applies custom filters based on the provided configuration."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"test-case-scenario-of-capture-network-log-action",children:'Test Case Scenario of "Capture Network Log" Action'}),"\n",(0,t.jsx)(n.h3,{id:"title",children:"Title"}),"\n",(0,t.jsx)(n.p,{children:"Capture Network Log from Browser"}),"\n",(0,t.jsxs)(n.p,{children:["Sample test case: ",(0,t.jsx)(n.a,{href:"https://zeuz.zeuz.ai/Home/ManageTestCases/Edit/TEST-8226/",children:"TEST-8226 Capture Network Log from Browser"})]}),"\n",(0,t.jsx)(n.h3,{id:"scenario-overview",children:"Scenario Overview"}),"\n",(0,t.jsx)(n.p,{children:"This test case is designed to demonstrate the process of capturing network logs while interacting with a web application. The test involves navigating to a specific URL, performing actions such as loading posts, creating a new post, and attempting to update it, all while capturing and logging network activity."}),"\n",(0,t.jsx)(n.h3,{id:"steps-to-follow",children:"Steps to Follow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Navigate to the specified URL."}),"\n",(0,t.jsx)(n.li,{children:"Capture Network Log - Start."}),"\n",(0,t.jsx)(n.li,{children:'Click on the "Load Posts" button.'}),"\n",(0,t.jsx)(n.li,{children:"Validate partial text."}),"\n",(0,t.jsx)(n.li,{children:"Enter title in title input field on create post page."}),"\n",(0,t.jsx)(n.li,{children:"Enter description in create post page."}),"\n",(0,t.jsx)(n.li,{children:"Click on the create button on the create post page."}),"\n",(0,t.jsx)(n.li,{children:"Validate creation message."}),"\n",(0,t.jsx)(n.li,{children:"Click on the update button."}),"\n",(0,t.jsx)(n.li,{children:"Validate update failure message."}),"\n",(0,t.jsx)(n.li,{children:"Capture Network Log - Stop."}),"\n",(0,t.jsx)(n.li,{children:"Log network data."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"actions",children:"Actions"}),"\n",(0,t.jsx)(n.h4,{id:"capture-network-log---start",children:"Capture Network Log - Start"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Value"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"capture network log"}),(0,t.jsx)(n.td,{children:"selenium action"}),(0,t.jsx)(n.td,{children:"start"})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"capture-network-log---stop",children:"Capture Network Log - Stop"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Value"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"save"}),(0,t.jsx)(n.td,{children:"input parameter"}),(0,t.jsx)(n.td,{children:"logs_from_network"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"include response body"}),(0,t.jsx)(n.td,{children:"input parameter"}),(0,t.jsx)(n.td,{children:"true"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"capture network log"}),(0,t.jsx)(n.td,{children:"selenium action"}),(0,t.jsx)(n.td,{children:"stop"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"expected-result",children:"Expected Result"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The post is created successfully with a confirmation message, update fails with an error message, and all network activity is captured and logged."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"common-errors-and-fixes",children:"Common Errors and Fixes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error"}),": The action was not placed before relevant events (e.g., API calls or page navigation).","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fix"}),": Ensure Capture Network Log - Start is placed before any action that triggers network activity, and Stop is added after."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error"}),": Network log was stopped too early.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fix"}),': Delay or place "Capture Network Log - Stop" after all relevant actions have completed, including wait steps if necessary.']}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error"}),": The browser may block developer tools or background scripts.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fix"}),": Enable proper permissions and ensure browser extensions or security settings do not block network traffic monitoring."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error"}),": The log captures all traffic, including third-party or static resources.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fix"}),": Filter logs by method (e.g., POST, GET) or specific endpoints to focus on relevant API calls."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error"}),": No action was taken to log or store the captured data.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fix"}),": Add a Log Network Data or Export Network Log step after stopping the capture."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"additional-tips-for-this-action",children:"Additional Tips for this Action"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Place ",(0,t.jsx)(n.strong,{children:"Start Capture Network Log"})," before any action that triggers network activity to ensure all requests are recorded."]}),"\n",(0,t.jsx)(n.li,{children:'Label network log actions (e.g., "Start Capture - Create Post") for easier debugging and analysis.'}),"\n",(0,t.jsx)(n.li,{children:"Add wait or validate steps to ensure API calls complete before stopping the log."}),"\n",(0,t.jsx)(n.li,{children:"Focus on key request types or endpoints to reduce irrelevant network data."}),"\n",(0,t.jsx)(n.li,{children:"After logging, validate status codes and response data."}),"\n",(0,t.jsx)(n.li,{children:"Use Log Network Data or Export Log to save captured data."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"error-handling-for-capture-network-log-action",children:"Error Handling for Capture Network Log action"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error"}),": No data was captured.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fix"}),': Ensure that the "Start Capture Network Log" action is placed before any user interaction or page load that triggers network requests.']}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error"}),": The logs are incomplete.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fix"}),": Confirm the capture stop action occurs after all network requests finish."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error"}),": There are permission issues preventing network logging.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fix"}),": Check browser or security settings that might block network logging."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error"}),": The log file is not being saved.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fix"}),": Confirm that a log export or save step follows capture stop."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);
"use strict";(self.webpackChunkzeuz_docs=self.webpackChunkzeuz_docs||[]).push([[8749],{91895:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"zeuz-platform-20250909","metadata":{"permalink":"/blog/zeuz-platform-20250909","source":"@site/blog/2025-09-09-zeuz-platform-20250909/index.md","title":"ZeuZ Platform 20250909","description":"Welcome to the September 2025 release of the ZeuZ platform!","date":"2025-09-09T00:00:00.000Z","tags":[{"inline":false,"label":"Changelog","permalink":"/blog/tags/changelog","description":"ZeuZ platform changelogs"}],"readingTime":8.97,"hasTruncateMarker":true,"authors":[{"name":"MD Shakib Ahmed","title":"Product Engineer","url":"https://github.com/mdshakib007","page":{"permalink":"/blog/authors/shakib-ahmed"},"socials":{"github":"https://github.com/mdshakib007"},"imageURL":"https://github.com/mdshakib007.png","key":"shakib_ahmed"},{"name":"Mohammed Sazid Al Rashid","title":"Technical Lead","url":"https://github.com/sazid","page":{"permalink":"/blog/authors/sazid"},"socials":{"x":"https://x.com/sazidz","linkedin":"https://www.linkedin.com/in/sazidz/","github":"https://github.com/sazid","newsletter":"https://sazid.github.io"},"imageURL":"https://github.com/sazid.png","key":"sazid"}],"frontMatter":{"slug":"zeuz-platform-20250909","title":"ZeuZ Platform 20250909","authors":["shakib_ahmed","sazid"],"tags":["changelog"]},"unlisted":false,"nextItem":{"title":"ZeuZ Platform 20250818","permalink":"/blog/zeuz-platform-20250818"}},"content":"Welcome to the September 2025 release of the ZeuZ platform!\\n\\n## \ud83d\ude80 New Features\\n- **Send notifications manually:** Manually send external webhook notifications from the RunID page.\\n- **Release Report Default Query Creation System:** Guided 5-step wizard to auto-generate queries for ZeuZ, Pull Requests, and GitHub Issues, streamlining workflow setup.\\n- **Release Report Share:** Complete rewrite with modular structure, improved performance, and modern UI \u2014 including Security Monitoring, Enhanced Testing Analytics, and Jira Integration.\\n- **Cleanup Scheduler:** Automated system to manage storage space and maintain database performance by periodically removing old test run data and log files.\\n- **Notification System Redesigned:** A new UI notification system with clear stats, color-coded categories, quick navigation, and faster ways to find and act on updates.\\n\\n\x3c!-- truncate --\x3e\\n\\n## \ud83d\udc1b Bug Fixes\\n- **Global Attachment page:** `memory leak`, `delete attachment` & `download attachment` bugs fixed.\\n- **Web Automation:** Text paste with `(Ctrl+V)` bug fixed.\\n- **Deploy page:** `Notify External Services Only on Fail` flag bug fixed.\\n- **Redirect on Login:** After login, redirect to the page you were trying to access.\\n- **Select Objective:** Deploy page\'s *Select Objective* infinite loading bug fixed.\\n\\n## \ud83d\udee0\ufe0f Improvements\\n- **Slack & Discord notification:** Improved the UI for Discord & Slack notifications. Extra notification sent when some test cases fail.\\n- **Global Attachment page:** More intuitive file uploads. Easily filter by attachment type. Multiple download & delete. Variable length pagination.\\n- **Test Case edit page:** Save previous `Explain Testcase` & `Suggest Step Description` response if the test case is not modified again.\\n- **ProfilePicture Component:** Now supports both username and uid, with smart fallbacks and tooltips for better usability. We added this to make profile handling more flexible and reliable across different workflows while keeping the UI consistent.\\n- **Release Report Share Performance Optimizations:** Smart merging algorithms, deduplication, caching, background updates, conditional rendering, optimistic UI.\\n\\n## Release Report V2\\n### **Summary**\\nWe built the new Release Report Share to replace the old version that was hard to maintain, slow to improve, and had a complex UI/UX. The new version is modular, faster, and easier to use, with a modern design and better integrations like GitHub and Jira for smarter, real-time release tracking.\\n\\n### **5-Step Wizard Process**\\n1. **ZeuZ Version** \u2192 Version selection\\n2. **Platform Selection** \u2192 GitHub (active), GitLab/Jira (coming)\\n3. **Repository** \u2192 GitHub repo selection\\n4. **Date Range** \u2192 PR date filtering\\n5. **GitHub Config** \u2192 Milestones, labels selection\\n\\n### **Auto-Generated Query Types**\\n- **ZeuZ Query**: Version-based testing data\\n- **Pull Request Query**: Date-range filtered PRs\\n- **Default GitHub Query**: Milestone + label based\\n- **Issue Query**: Milestone-based issues\\n\\n### **Release Report Share Summary**\\n| Component | Purpose | Key Features |\\n|-----------|---------|--------------|\\n| **Testing summary** | Test statistics display | Dynamic cards, percentages, automated vs manual |\\n| **Release overview** | Release information | Title, description, dates, manager profile |\\n| **Testing section** | Testing overview| Charts, distributions, failed test lists |\\n| **GitHub section** | GitHub overview| PRs, issues, security, activity tracking |\\n| **Jira section** | Jira overview| Issue tracking, status analysis |\\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250909/release-report-guided-query.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n---\\n\\n## Notification System Redesign\\n\\n### \ud83d\udcdd Summary\\nA redesigned notification system with a modern interface, smart filters, interactive features, and improved usability.\\n\\n### \u2728 Update Highlights\\n#### Smart Notification Bell\\n- Unread counter with red badge (`99+` for large numbers).\\n- The bell gives users an instant sense of how many pending items need attention. The `99+` cap avoids overwhelming the user while still signaling urgency.\\n\\n![Smart notification bell](smart-notification-bell.png)\\n\\n#### Advanced Filtering & Search\\n- Search notifications by title, message.\\n- Category filters: **REQ, TASK, BUG, TC, TEST, Batch**.\\n- Tabs for **All** and **Unread**, with counters.\\n- Filters and tabs mirror daily workflows, so users can quickly jump to the right set of notifications. Having **All** and **Unread** in one place ensures nothing slips through while still keeping the focus on new items.\\n\\n![Notification slider](notification-slider.png)\\n\\n![Notification filter](notification-filter.png)\\n\\n#### Interactive Features\\n- Click to navigate directly to the related page.\\n- Auto-mark as read when clicked.\\n- Highlighting for unread notifications.\\n- Friendly timestamps (\u201c2 hours ago\u201d, \u201cyesterday\u201d).\\n- Each interaction reduces friction: clicking a notification takes you straight to context, marking as read happens automatically, and highlights make new items stand out. Relative timestamps provide instant understanding of recency, while animations and empty states make the system feel responsive and clear.\\n\\n#### Visual Stats and Layout\\n- Cleaner layout with higher readability.\\n- Top-level stats (unread counts, categories) provide at-a-glance awareness.\\n- Color-coded categories improve instant recognition.\\n- The layout is designed to surface the most important information first. Stats at the top summarize workload immediately, while color-coded categories help users recognize item types without reading in detail. The clean hierarchy makes the panel easy to scan, even on smaller devices.\\n\\n![Notification slider](notification-layout.png)\\n\\n---\\n\\n## Switch browser window/tab (Includes Playwright capability)\\n\\n### \ud83d\udcdd Summary\\n\\nThe \\"Switch browser window/tab\\" action now supports Playwright. Users can perform this action using Playwright through a remote-debugging port. Previously, this action only supported Selenium. Now, users can perform this action with both Selenium and Playwright according to their preference.\\n\\nThis update is a part of our broader plan to enable both Selenium and Playwright to perform ZeuZ actions. The goal is to let users choose according to their preference instead of enforcing one.\\n\\n### \u2728 Update Highlights\\n\\n#### Why have both options?\\n\\nPlaywright is comparatively newer and better in some areas than Selenium. What happens when the user wants to migrate from Selenium to Playwright? Do they need to rewrite the test cases that are already using Selenium? Having both Selenium and Playwright makes the migration smooth and easy. With this update, which is a part of our broader plan to enable both options to perform ZeuZ actions, users can easily shift to use Playwright while ensuring they do not necessarily need to change their legacy test cases and setup to make them compatible with Playwright.\\n\\n#### Easy switch\\n- Users can easily switch between Selenium and Playwright to perform the mentioned action. If the \\"playwright\\" row parameter is true, then the action will use Playwright to switch between tabs; otherwise, Selenium will perform the action.\\n\\n![Playwright integration](playwright-integration.png)\\n\\n#### Remote debugging port\\n- To enable Playwright capabilities, users need to provide a remote debugging port. Users only need to provide the remote debugging port for the first webpage only. After that, users can switch to any webpage (i.e., tab) on the webdriver using Playwright. Make sure the port is not blocked. Refer to the screenshot below for providing the remote debugging port. For Selenium, providing a remote debugging port is not required.\\n\\n![Enable Playwright integration](enable-playwright-integration.png)\\n\\n#### Switch tab by title\\n- Users can switch the tabs by title using Playwright. Selenium still supports switching tabs both by title and index.\\n\\n![Switch tab by title](switch-tab-by-title.png)\\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250909/switch-tab-demo.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n\\n## RunId page redesign\\n### Summary\\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250909/runid-page-redesign.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\nThe previous RunId page was originally built with jQuery. While it worked, it had several limitations: users had to perform multiple clicks for simple actions, the design felt outdated, and the overall experience wasn\u2019t optimized for quick decision-making.\\n\\nAs part of our commitment to improving usability and speed, we rebuilt the RunId page in React.js. The redesign is not only more modern and faster, but it also focuses on reducing friction, surfacing the most important information at a glance, and creating a smoother workflow for both testers and reviewers.\\n\\n### Update Highlights\\n- Unified RunID and Execute page\\n- Better and Modern Log view\\n- Faster loading speed\\n- Statistics about test cases\\n- Cleaner design with more information at a glance\\n\\n### Statistics about test cases\\n\\n![RunID stats](runid-stats.png)\\n\\n**Why:** Users often need to see the overall health of a run before diving into details.\\n\\n**Benefit:** Statistics are now displayed at the top, giving immediate insight into test results. This helps teams prioritize where to focus first.\\n\\n**Testcase Status Breakdown:** See how many test cases were Passed, Failed, Blocked, Skipped, or Submitted at a glance. This gives an instant overview of overall run stability.\\n\\n**Priority Breakdown:** Results are grouped by Priority 1, 2, 3, and 4 test cases. Each priority level shows how many were Passed, Failed, Blocked, or Skipped.\\n\u2192 This helps teams identify whether critical (P1/P2) tests are passing, so urgent issues can be addressed first.\\n\\n**Feature Breakdown:** Test cases are broken down by feature, showing Passed, Failed, Blocked, Skipped, and Submitted counts.\\nFeatures are sorted by the total number of Failed + Blocked test cases, and only the top 10 are shown.\\n\u2192 This highlights the riskiest areas in the product so teams know where to focus fixes.\\n\\n**Top Failing Steps:** A list of the most common failing steps across all test cases. Clicking a failing step instantly applies filters to show where and why it\u2019s failing.\\n\u2192 This helps identify recurring issues and speeds up root cause analysis.\\n\\n### Better and Modern Log view\\n**Why:** The old logs were hard to grasp and analyze, looked old, and slowed down debugging.\\n**Benefit:** The new log viewer is more interactive:\\n- Filter by test step\\n- Filter by test status (Error, Warning, Passed)\\n- See more details about test steps by clicking Show Test steps\\n- We can give more space to logs by dragging between steps and logs\\n\\n### Cleaner design\\n**Why:** The previous layout was cluttered and required extra clicks to update information.\\n\\n**Benefit:**\\n- The RunId details card now shows all relevant information (version, objective, milestone, comments) in one place, reducing context switching.\\n- Test case details cards are collapsible, keeping the interface clean while still allowing quick access.\\n- Hover actions surface Logs, Bugs, and Execution buttons without overwhelming the view.\\n- Inline step status changes and commenting make updates faster and smoother.\\n\\n### Unified RunID and Execute page\\n\\n![RunID execute manual](runid-execute-manual.png)\\n\\n**Why:** Previously, users had to navigate to a separate page to manage manual test cases, which broke workflow and added friction.\\n\\n**Benefit:** Now everything is unified on one page. You can expand a test case card to see steps, update statuses inline, and add/update comments directly\u2014without leaving the page.\\n\\n---\\n## Feature Cleanup Scheduler\\n\\n### Summary\\nThe Cleanup Scheduler is an automated system that helps manage storage space and maintain database performance by periodically removing old test run data and log files. Users can configure flexible schedules and filtering criteria to control what gets cleaned up and when.\\n\\n### \u2728 Update Highlights\\n\\n#### Scheduling System\\nCreate cleanup jobs with multiple timing options:\\n- **Weekly:** specific days and times\\n- **Monthly:** specific dates and times\\n- **Calendar-based:** fixed dates\\n- **Interval-based:** every N minutes or hours\\n\\n![Cleanup scheduler](cleanup-scheduler.png)\\n\\n#### Filtering Criteria\\nTarget runs for cleanup based on:\\n- **Age:** runs older than a defined number of days\\n- **Milestone:** runs linked to specific test Milestones\\n- **Version:** runs associated with particular branch Versions\\n- **Objective:** runs associated with a particular Objective\\n\\n![Cleanup scheduler filters](cleanup-scheduler-filters.png)\\n\\n#### Cleanup Types\\n- **Delete Log:** removes only log folders\\n- **Delete Run and Log:** removes both database records and log files\\n\\n![Cleanup scheduler config](cleanup-scheduler-config.png)"},{"id":"zeuz-platform-20250818","metadata":{"permalink":"/blog/zeuz-platform-20250818","source":"@site/blog/2025-08-18-zeuz-platform-20250818/index.md","title":"ZeuZ Platform 20250818","description":"Release date: August 18, 2025","date":"2025-08-18T00:00:00.000Z","tags":[{"inline":false,"label":"Changelog","permalink":"/blog/tags/changelog","description":"ZeuZ platform changelogs"}],"readingTime":8.31,"hasTruncateMarker":true,"authors":[{"name":"Muntasib Muhib Chowdhury","title":"Product Engineer","url":"https://github.com/Muntasib-creator","page":{"permalink":"/blog/authors/muhib"},"socials":{"x":"https://x.com/MuntasibC","linkedin":"https://www.linkedin.com/in/muhib-c/","github":"https://github.com/Muntasib-creator"},"imageURL":"https://github.com/Muntasib-creator.png","key":"muhib"},{"name":"Mohammed Sazid Al Rashid","title":"Technical Lead","url":"https://github.com/sazid","page":{"permalink":"/blog/authors/sazid"},"socials":{"x":"https://x.com/sazidz","linkedin":"https://www.linkedin.com/in/sazidz/","github":"https://github.com/sazid","newsletter":"https://sazid.github.io"},"imageURL":"https://github.com/sazid.png","key":"sazid"}],"frontMatter":{"slug":"zeuz-platform-20250818","title":"ZeuZ Platform 20250818","authors":["muhib","sazid"],"tags":["changelog"]},"unlisted":false,"prevItem":{"title":"ZeuZ Platform 20250909","permalink":"/blog/zeuz-platform-20250909"},"nextItem":{"title":"ZeuZ Platform 20250712","permalink":"/blog/zeuz-platform-20250712"}},"content":"*Release date: August 18, 2025*\\n\\n---\\n\\nWelcome to the August 2025 release of the ZeuZ platform!\\n\\n## \ud83d\ude80 Features\\n\\n- **Dashboard Updates**: Compressed document URLs, Node & License Status section, Build Health enhancements, and GitHub integration with date-range filtering.\\n- **Run Test Updates**: Improved Version Name Validation, Advanced Tab refinements, and Responsive Sidebar Layouts. Implemented sending external service reports only on fails.\\n- **zAI Page Assistance**: Server-wide zAI enabled for contextual assistance, quick Q&A, and page-specific guidance.\\n- **Close Tab**: Dual-driver support (Selenium + Playwright) for closing tabs by title, index, or active tab.  \\n- **Accessibility Test**: Scan webpages for accessibility issues using axe-core, generating JSON and HTML reports.  \\n- **Chrome Extension Download**: Install Chrome extensions of latest version and add with the automation browser during automation runs via extension-id list.  \\n- **Data Store Updates**: Batch processing for multiple file uploads with single interaction is implemented.\\n- **Unified \u201cLinks\u201d Tab**: Consolidated tabs for Requirements, Tasks, Bugs, and Test Cases in `Links` tab across multiple pages.  \\n- **Set, History, and Fail Analysis Page Update**: Improved visual representation of pass, fail, block, etc., in donut charts with smooth pop-up details.  \\n\\n\x3c!-- truncate --\x3e\\n\\n## \ud83d\udc1b Bug Fixes\\n\\n- Resolved scheduler-related bugs and runtime parameters clipboard merging of variables and tag-values issue.  \\n- Fixed `Take Screenshot` action failure and `maximize_window` in headless mode.  \\n- Addressed Slack webhook notification and set import/export bugs.  \\n\\n---\\n\\n## \ud83d\ude80 Dashboard Updates\\n\\n### Summary\\nThis update focuses on improving clarity, visual representation, and usability in the Dashboard. Key enhancements include cleaner document displays, consolidated build health data, and more informative legends, along with new sections for node and license status.\\n\\n### \u2728 Update Highlights\\n\\n- **Compressed Document URLs** \u2013 Cleaner, shortened display for easier reading\\n- **Node & License Status Section** \u2013 Real-time display of node availability and license usage\\n\\n![Node & License status](node-license-dashboard.png)\\n\\n- **Build Health & Priority Comparisons** \u2013 Selected version/milestone segments now shown at the bottom right of graphs\\n- **Enhanced Build Health Legends** \u2013 Legends now display both count and percentage\\n- **Merged Build Health Categories** \u2013 Fail + Block = Fail, Submit + Skip = Not Run\\n- **Scheduler Health Legend** \u2013 Added legend for better clarity in scheduler health graphs\\n- **Storage Graph Legend with Counts** \u2013 Status counts are displayed in the storage graph legend\\n- **Dashboard GitHub integration** \u2013 Quick stats: total tasks, bugs, requirements created/closed and PR open/closed/merged. PR & issue table. All data are filtered by date-range\\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250818/dashboard-github-integration.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## \ud83e\uddea Run Test Updates\\n\\n### Summary\\nThis update improves validation, refines component readability, and enhances layout adaptability for different sidebar sizes. Additionally, the option to notify external services only on failures has been restored in the advanced settings.\\n\\n### \u2728 Update Highlights\\n\\n- **Improved Version Name Validation** \u2013 More accurate checks to ensure valid version naming\\n- **Advanced Tab Refinements** \u2013 Enhanced readability, cleaner layout, and restored \\"Notify External Services Only on Fail\\" option\\n- **Responsive Sidebar Layouts** \u2013 Optimized appearance for both large and small sidebar configurations\\n\\n![Run test > Advanced settings - reorganized UI](run-test-reorganized-ui.png)\\n\\n## \u2728 zAI Page Assistance\\n\\n### Update Highlights\\n -   zAI is now enabled server-wide as a contextual assistant for pages and workflows. \\n -   Quick Q&A, page lookup, page-specific guidance. \\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250818/zai-page-assist.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## \ud83d\udcf1 Android Support Details\\n\\n### Summary\\nAdded comprehensive Android support for AI test case generation. Users can now select between web and Android platforms to generate automated test actions, significantly expanding ZAI\'s capabilities beyond web-only testing.\\n\\n### \u2728 Suported Actions\\n\\n- **Launch App** \u2013 Open Android applications using package name identifiers\\n- **Enter Text** \u2013 Intelligent text input with AI-powered element location\\n- **Click Element** \u2013 Interact with any UI element within Android applications\\n- **Key Press** \u2013 Hardware key interactions including Enter, Volume, Mute, and Back keys\\n- **Swipe to Element** \u2013 Automatic scrolling to reach off-screen elements (partially implemented)\\n\\n![zAI Chatbot - Android integration](zai-chatbot-android-integration.png)\\n\\n## Close Tab (Selenium + Playwright)\\n\\nClose tabs reliably by title, by index, or the current active tab. Uses Playwright over CDP when requested, with automatic Selenium fallback for robustness.\\n\\n### Key Benefits\\n- **Dual-driver support:** Playwright via CDP or pure Selenium  \\n- **Accurate tab selection:** Visual left-to-right order for index; filters non-page targets  \\n- **Dynamic DevTools port:** Uses the live remote debugging port provided by the user.  \\n\\n### Example 1\\n| Field       | Sub Field           | Value     |\\n|-------------|---------------------|-----------|\\n| playwright  | optional parameter  | True      |\\n| close tab   | selenium action      | close tab |\\n\\n### Example 2\\n| Field       | Sub Field           | Value                  |\\n|-------------|---------------------|------------------------|\\n| tab title   | input parameter     | [\'Zeuz\', \'Google\']     |\\n| playwright  | optional parameter  | True                   |\\n| close tab   | selenium action      | close tab              |\\n\\n### Example 3\\n| Field       | Sub Field           | Value       |\\n|-------------|---------------------|-------------|\\n| tab index   | input parameter     | [0, 1, -1]  |\\n| playwright  | optional parameter  | True        |\\n| close tab   | selenium action      | close tab   |\\n\\nIf neither **tab title** nor **tab index** is provided, the current active tab is closed.\\n\\nWhen `playwright=true`, ZeuZ connects to the Selenium-launched Chrome via the dynamically detected CDP port and executes the close operation.\\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250818/selenium-playwright-dual-driver-first-action.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## Accessibility Test\\n\\nScans currently rendered webpage in the webdriver for accessibility issues using **axe-core** via Selenium. Generates three reports: raw JSON, summarized JSON, and an HTML report with visual details.\\n\\n### Key Benefits\\n- **Comprehensive checks:**  Powered by axe-core; validates against WCAG rules for accessibility.\\n- **Debug accessibility issues:** Empowers developers to efficiently detect and address accessibility issues, facilitating the creation of more accessible website. \\n- **Actionable output:** Summary JSON plus a human-friendly HTML report  \\n- **CI-friendly:** Clear return values and structured logs for automation \\n \\n\\n### Usage\\n\\n| Field             | Sub Field      | Value             |\\n|-------------------|----------------|-------------------|\\n| accessibility test | common action  | accessibility test |\\n\\n### Behavior\\n- Uses existing Selenium session (`selenium_driver`) from shared variables  \\n- Waits briefly for page assets to load, injects axe, and runs analysis  \\n- Saves reports under **Accessibility Test Report/** with sanitized URL and timestamp  \\n- Logs summary counts: violations, passes, inapplicable, incomplete  \\n\\n### Reports Generated\\n- **Raw results (JSON):** `accessibility_result_{url}_{timestamp}.json`  \\n- **Summary (JSON):** `accessibility_summary_{url}_{timestamp}.json`  \\n- **Visual report (HTML):** `accessibility_report_{url}_{timestamp}.html`  \\n- **Location:** `Accessibility Test Report/`  \\n\\n## Requirements\\n- An active Selenium driver session must be available in shared variables   \\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250818/web-accessibility-testing.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n##  Chrome Extension Download\\n\\n### Summary\\nBulk install Chrome extensions during automation runs via an extension-id list. The IDs can be picked from the Chrome Web Store. \\n\\n![Web automation - add multiple extensions via extension ID from Chrome Web Store](add-extension-with-id.png)\\n\\n### Use Case & Highlights\\n-   Provide extension-id list in `Go To Link` action. the platform will download and attach those extensions to the Automation Test browser automatically. \\n-   Speed up test setup for projects that rely on extensions (ad-blockers, proxies, custom dev extensions). \\n\\n## \u26a1 Data Store Updates\\n\\n### Summary\\nEnhanced the Data Store functionality to support multiple file uploads simultaneously, with the ability to merge multiple files into a single table. The entire user interface has been modernized by jQuery, providing a more responsive and intuitive user experience.\\n\\n![Datastore - upload multiple CSVs](datastore-upload-multiple-csvs.png)\\n\\n### \u2728 Update Highlights\\n- **Batch Processing**: Upload multiple files in one operation.\\n- **File Merging**: Combine multiple data sources into unified tables.\\n- **Enhanced Preview**: A comprehensive summary is displayed before the final upload.\\n- **Streamlined Workflow**: The upload process is simplified with fewer steps and improved user guidance.\\n\\n## Some More Features\\n- **New Variable `zeuz_tc_logs`** \u2013 Dedicated storage for test case errors and logging information\\n- **Notifications (Discord & Slack)** \u2013 Templates simplified for readability. Important failed test cases displayed at the top. Links to testcases are included for quick triage.\\n\\n![New Discord/Slack notification style](new-discord-slack-notification-style.png)\\n\\n- **VM detection** \u2013 Automatic fallback to headless mode when a VM is detected and headless wasn\u2019t selected, reduces accidental GUI failures.\\n\\n## \ud83d\udc1b Bug Fix Updates\\n\\n- **Continue Point Value Import** \u2013 Resolved issue with continue point values not importing correctly\\n- **Runtime Parameters Clipboard** \u2013 Fixed problem with pasting runtime parameters from clipboard\\n- **AI Multiple-Action Validation** \u2013 Fixed multiple-action return values from AI not being properly checked\\n- **Take Screenshot Action** \u2013 Fixed failure when `Take Screenshot` was the final action in a test step. \\n- **Headless Window Size** \u2013 Fixed `maximize_window` in headless mode when the window size was unset (prevents headless runs from failing).\\n\\n## Unified \u201cLinks\u201d Tab Implementation Across Pages\\n\\n### Overview\\nA major UI/UX restructuring was implemented across multiple pages to streamline navigation and improve usability. Multiple separate tabs for different linked item types have been merged into a single **\u201cLinks\u201d** tab. This reduces clutter, improves workflow efficiency, and keeps all related items in one place.\\n\\n### Changes Implemented\\n\\n#### 1. **Test Case Edit Page**\\n- **Merged Tabs:**\\n  - Requirement\\n  - Tasks\\n  - Bugs\\n  \u2192 **Now all accessible from the new \u201cLinks\u201d tab**\\n\\n![Link items - test case edit](link-items-tc.png)\\n\\n\\n#### 2. **Requirement Page**\\n- **Merged Tabs:**\\n  - Test Case\\n  - Tasks\\n  - Bugs  \\n  \u2192 **Now all accessible from the new \u201cLinks\u201d tab**\\n\\n![Link items - requirement](link-items-req.png)\\n\\n#### 3. **Bug Page**\\n- **Merged Tabs:**\\n  - Test Case\\n  - Tasks\\n  - Requirements  \\n  \u2192 **Now all accessible from the new \u201cLinks\u201d tab**\\n\\n![Link items - bug](link-items-bug.png)\\n\\n#### 4. **Task Page**\\n- **Merged Tabs:**\\n  - Test Case\\n  - Requirements\\n  - Bugs  \\n  \u2192 **Now all accessible from the new \u201cLinks\u201d tab**\\n\\n![Link items - task](link-items-task.png)\\n\\n### Unified \u201cLinks\u201d Tab Features\\n- Single consolidated table for Requirements, Tasks, Bugs, and Test Cases.\\n- Type icons for easy identification.\\n- Unified search, filter, and sorting across all linked items.\\n- Create, link, and manage items directly from one tab.\\n- Bulk selection and relationship management.\\n- Fully responsive and mobile-friendly design.\\n\\n### Benefits\\n- **Reduced complexity** \u2013 fewer tabs to navigate.\\n- **Improved workflow** \u2013 manage all related items from one location.\\n- **Better organization** \u2013 logical grouping of related functionality.\\n- **Preserved existing features** \u2013 all functionality from previous tabs is available in the unified view.\\n\\n## \ud83d\ude80 Set, History, and Fail Analysis Page Update\\n\\nThis update improves the visual representation of **pass**, **fail**, **block**, **in progress**, **skip**, and **submit** data in the donut charts and summary donut chart on the **Set**, **History**, and **Fail Analysis** pages. Now, all relevant data is displayed in a single, smooth pop-up chart for better clarity and user experience.\\n\\n### Update Highlights\\n\\n- **Relevant Data in One Chart** \u2013 View all related information in one consolidated pop-up chart.  \\n- **Smooth Pop-up** \u2013 The pop-up appears instantly when you hover anywhere inside the donut charts.\\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250818/run-history-improved-chart-popup.mp4\\" type=\\"video/mp4\\" />\\n</video>"},{"id":"zeuz-platform-20250712","metadata":{"permalink":"/blog/zeuz-platform-20250712","source":"@site/blog/2025-07-12-zeuz-platform-20250712/index.md","title":"ZeuZ Platform 20250712","description":"Release date: July 12, 2025","date":"2025-07-12T00:00:00.000Z","tags":[{"inline":false,"label":"Changelog","permalink":"/blog/tags/changelog","description":"ZeuZ platform changelogs"}],"readingTime":3.08,"hasTruncateMarker":true,"authors":[{"name":"Tanvir Hossain Antu","title":"Product Engineer","url":"https://github.com/Antu7","page":{"permalink":"/blog/authors/antu"},"socials":{"x":"https://x.com/antu_tanvir","linkedin":"https://www.linkedin.com/in/antu7/","github":"https://github.com/antu7","newsletter":"https://antu7.github.io"},"imageURL":"https://github.com/Antu7.png","key":"antu"},{"name":"Mohammed Sazid Al Rashid","title":"Technical Lead","url":"https://github.com/sazid","page":{"permalink":"/blog/authors/sazid"},"socials":{"x":"https://x.com/sazidz","linkedin":"https://www.linkedin.com/in/sazidz/","github":"https://github.com/sazid","newsletter":"https://sazid.github.io"},"imageURL":"https://github.com/sazid.png","key":"sazid"}],"frontMatter":{"slug":"zeuz-platform-20250712","title":"ZeuZ Platform 20250712","authors":["antu","sazid"],"tags":["changelog"]},"unlisted":false,"prevItem":{"title":"ZeuZ Platform 20250818","permalink":"/blog/zeuz-platform-20250818"},"nextItem":{"title":"ZeuZ Platform 20250518","permalink":"/blog/zeuz-platform-20250518"}},"content":"*Release date: July 12, 2025*\\n\\n---\\n\\nWelcome to the July 2025 release of the ZeuZ platform! \ud83d\ude80 This release brings significant improvements to browser testing, AI capabilities, test case management, scheduling, and dashboard features.\\n\\n## \ud83d\ude80 Features\\n\\n- Test case export/import can now handle test case and step attachments\\n- Scheduler page redesigned\\n- Release report: GitHub issue type filter added\\n- Release report: Added date range filtering for GitHub pull requests\\n- Pre-requisite test case assignment in test case search and test set pages\\n- ZeuZ Node installation and connection help video in dashboard\\n- Enhanced ZAI Chatbot with Q&A, history, and improved capabilities\\n- Minor UI and feature updates/fixes\\n\\n\x3c!-- truncate --\x3e\\n\\n## \ud83d\udc1b Bug Fixes\\n\\n- Fixed test case import for expected and description fields\\n- Resolved scheduler-related bugs (multiple fixes)\\n- Fixed runtest version issue\\n- Resolved \\"/\\" character issue in names\\n- Fixed watch.mjs file issue\\n- Implemented datastore team/project separation\\n- Resolved set import dropdown filter bug\\n- Fixed set export to JSON bug\\n- Fixed Slack webhook notification implementation\\n- Enabled iframe embeds for embedding ZeuZ into dashboads for reporting\\n\\n---\\n\\n## Chrome for Testing\\n\\nTest your web applications across any specific version of Chrome, including pre-release builds (Dev, Beta, Canary). ZeuZ now provides complete browser version control with automated version management.\\n\\n**Key Benefits:**\\n- Validate cross-version compatibility\\n- Pinpoint bugs in specific Chrome builds\\n- Test against upcoming Chrome features\\n- Fully automated version-targeted testing\\n\\n**Usage:** Add a chrome:version parameter to your \\"Go to link\\" action:\\n\\n| Field | Sub Field | Value |\\n|--|--|--|\\n| chrome:version | optional parameter | **%\\\\|my_version\\\\|%** or **125.0.6382.0** |\\n\\n**Smart Version Management:**\\n- Auto-cleanup unused versions after 90 days\\n- Latest version auto-updates every 7 days\\n- Automatic download and installation of Chrome and ChromeDriver\\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250712/463816684-44b90f6f-bf8b-45d3-a89c-0216e2aafbb4.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n---\\n\\n## Enhanced ZAI Chatbot\\n\\nZAI, your AI-powered testing assistant, now features improved memory and knowledge capabilities for more personalized and accurate responses.\\n\\n**New Features:**\\n- **Smarter Memory:** Saves chat history for personalized, coherent responses\\n- **Knowledge-Powered Answers:** Real-time answers from product documentation and knowledge base\\n\\n![ZAI Chatbot demo](463820915-c1f8d7ca-a7fc-43de-bfd9-e18f3f29b753.png)\\n\\n## ZIP Import for Test Cases\\n\\nComprehensive ZIP import functionality now supports test cases with all related attachments, improving data integrity and providing a complete import/export experience.\\n\\n**Features:**\\n- Import test cases from ZIP files with structured folder support\\n- Embedded metadata (index.json) handling\\n- Test case and step-level attachment processing\\n- Automatic ID mapping and database integration\\n- Full backward compatibility with JSON imports\\n\\n**Supported File Structure:**\\n```\\nTestCases_backup_export.zip\\n\u251c\u2500\u2500 index.json\\n\u2514\u2500\u2500 test_cases/\\n    \u2514\u2500\u2500 {tc_id}/\\n        \u251c\u2500\u2500 tc.json\\n        \u251c\u2500\u2500 attachments/\\n        \u2502   \u251c\u2500\u2500 file1.pdf\\n        \u2502   \u2514\u2500\u2500 file2.csv\\n        \u2514\u2500\u2500 steps_attachments/\\n            \u2514\u2500\u2500 step_{step_id}/\\n                \u251c\u2500\u2500 step_file1.csv\\n                \u2514\u2500\u2500 step_file2.txt\\n```\\n\\n---\\n\\n## Enhanced Scheduler Management\\n\\nStreamlined scheduler experience with in-context interactions and bulk operations, eliminating page reloads for better workflow efficiency.\\n\\n**New Capabilities:**\\n- **Inline Creation & Editing:** Modal-based scheduler management from the Schedule List page\\n- **Step-by-Step Creation:** Guided modal for efficient scheduler setup\\n- **Editable Details:** View and update scheduler information without page navigation\\n- **Bulk Operations:** Select multiple schedulers for activate/deactivate actions\\n- **Run History Access:** Popup view of recent run history with full history navigation\\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250712/464002801-d5f18d77-886e-49aa-b9d0-0e03ecf8ed7d.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## ZeuZ Dashboard\\n\\nCentral hub providing comprehensive overview of your automation ecosystem with execution engines, test metrics, and storage insights.\\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250712/464026255-32f99fe1-df37-413a-a869-925113da4c55.mov\\" type=\\"video/mp4\\" />\\n</video>\\n\\n**Dashboard Components:**\\n\\n**ZeuZ Node Management:**\\n- One-click ZeuZ Node download\\n- Platform-specific connection guides (Windows, Mac, Linux)\\n- Quick access to Node, Server, Changelog, and Documentation\\n\\n**Build Health Monitoring:**\\n- View health by milestones or versions\\n- Pass/Fail metrics with visual percentages\\n- Hover for detailed counts and percentages\\n\\n**Automatability Overview:**\\n- Donut chart visualization of test case categories\\n- Color-coded automation status tracking"},{"id":"zeuz-platform-20250518","metadata":{"permalink":"/blog/zeuz-platform-20250518","source":"@site/blog/2025-05-18-zeuz-platform-20250518/index.md","title":"ZeuZ Platform 20250518","description":"Release date: May 18, 2025","date":"2025-05-18T00:00:00.000Z","tags":[{"inline":false,"label":"Changelog","permalink":"/blog/tags/changelog","description":"ZeuZ platform changelogs"}],"readingTime":5.66,"hasTruncateMarker":true,"authors":[{"name":"Mohammed Sazid Al Rashid","title":"Technical Lead","url":"https://github.com/sazid","page":{"permalink":"/blog/authors/sazid"},"socials":{"x":"https://x.com/sazidz","linkedin":"https://www.linkedin.com/in/sazidz/","github":"https://github.com/sazid","newsletter":"https://sazid.github.io"},"imageURL":"https://github.com/sazid.png","key":"sazid"}],"frontMatter":{"slug":"zeuz-platform-20250518","title":"ZeuZ Platform 20250518","authors":["sazid"],"tags":["changelog"]},"unlisted":false,"prevItem":{"title":"ZeuZ Platform 20250712","permalink":"/blog/zeuz-platform-20250712"}},"content":"*Release date: May 18, 2025*\\n\\n---\\n\\nWelcome to the May 2025 release of the ZeuZ platform! \ud83d\ude80 We\'re thrilled to introduce several powerful updates that will enhance your testing experience. Key highlights include:\\n\\n**Features**\\n\\n- \u2728 Seamless ZeuZ Node connection\\n- \ud83d\udd0d AI-Powered Mobile inspector\\n- \ud83d\udd2e Variable viewer in Debug page\\n- \ud83d\udcca AI-Powered Release report summary\\n- \ud83d\udd04 Pre-requisite test case functionality\\n- \ud83d\udd01 Rerun existing RunID capability\\n- \ud83d\udcc8 Fail analysis reporting\\n\\n\x3c!-- truncate --\x3e\\n\\n**Bug Fixes**\\n\\n- Fixed report generation issues when GitHub integration is missing in Testing > Reports > Release Report\\n- Resolved step section slider visibility problems in Testing > Testcase > Create Testcase caused by table insertions in Description or Expected fields\\n- Corrected global attachments scope\\n- Fixed Build-to-Build comparison bugs in Testing > Reports > Execution\\n\\n**Enhancements**\\n\\n- Improved assignee user search functionality in Testing > Reports > Fail Analysis\\n- Optimized page load time and performance in Testing > History\\n- Fixed incorrect team/project feature display in Project > Create/Edit > Task, Bug & Requirement pages\\n- Enhanced UI in Testing > Deployments > History & Set page\\n- Restricted Datastore access by team/project for better security\\n- Streamlined GitHub issue linking process\\n- Updated Run Queue feature and UI in Testing > Deployments > History\\n- Added Storybook Integration for UI Components\\n- Enhanced Donut Charts and fixed Total Value in Testing > Deployments > Set/History\\n- Implemented Automatic Default Filter for Fail Analysis Report\\n- Redesigned border color for clarity in Testing > Reports > Fail Analysis\\n- Updated Run History border color to reflect test case status in Testing > Test case edit pages\\n\\n## Seamless ZeuZ Node Connection\\n\\nConnect your ZeuZ Node effortlessly without the hassle of launching a terminal or copying and pasting commands. The process is now completely streamlined!\\n\\n[View the accompanying ZeuZ Node release](https://github.com/AutomationSolutionz/Zeuz_Python_Node/releases/tag/v20.0.0)\\n\\n<video controls loop>\\n  <source src=\\"/blog/zeuz-platform-20250518/Connect ZeuZ Node.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## AI-Powered Mobile Inspector\\n\\nInspect Android\u2122 applications directly within ZeuZ Server without installing additional tools like Appium Inspector or Android uiautomatorviewer.\\n\\nSay goodbye to hours of setup frustration! Simply connect your mobile device or launch an emulator, run ZeuZ Node, and connect to ZeuZ Server. Everything else is handled automatically. This also solves a persistent challenge:\\n\\n> No more restarting the adb server after each inspection through Appium/uiautomatorviewer.\\n\\n**Features:**\\n\\n1. **Enhanced Screenshot and Element Tree Detection:** Improved accuracy in detecting and displaying UI elements\\n2. **Dedicated Attribute List Panel:** Right-side panel for comprehensive element attribute inspection\\n3. **Powerful Search Functionality:** Use **Ctrl+F** to search by CSS, XPath, or value\\n4. **Dual DOM Support:** Both ADB and Appium now provide DOM access, eliminating inspection barriers when the Appium server is active\\n\\n![Mobile inspector](mobile-inspector.png)\\n\\n## Variable Viewer in Debug Page\\n\\nWhen debugging test cases, users often need to inspect current ZeuZ node variables to build further actions. Our new hierarchical tree view of variables provides a clean, intuitive interface for navigating complex data structures. Variables are displayed in three distinct formats:\\n\\n1. **JSON Object Variables:** Standard JSON-compatible variables with reasonably sized values\\n2. **JSON Schema Variables:** Large JSON variables truncated for readability and presented as schemas\\n3. **Non-JSON Variables:** Non-JSON objects (e.g., Python modules, WebDriver instances, WebDriver elements) with up to 200 properties displayed\\n4. **Oversized Values:** Variables with excessively large values are omitted for performance optimization\\n\\n![Debug variable viewer](debug-variables.png)\\n\\n## AI-Powered Release Report Summary\\n\\nOur intelligent report summary component analyzes release data and presents key insights through a modern UI. This feature enables stakeholders to quickly assess release impact, quality, and notable changes without wading through lengthy detailed reports.\\n\\n![AI-Powered release report summary](ai-powered-release-report-summary.png)\\n\\n## Pre-requisite Test Case\\n\\nThis powerful new feature allows one test case to specify another as its pre-requisite. When a test case is deployed, its pre-requisite test case executes first.\\n\\nWhen multiple test cases share a common pre-requisite and are deployed together, the pre-requisite executes only once throughout the entire RunID (run session), improving efficiency.\\n\\nThe system intelligently prevents cyclic dependencies during both link time and deployment time.\\n\\n**Background:**\\n\\n- Testers typically need pre-test setup like data preparation or environment configuration. Previously, users relied on set re-ordering to ensure pre-setup tests ran first.\\n- Some test sets contain multiple test case groups with their own pre-requisites.\\n- Test cases with pre-requisites may appear in multiple sets.\\n\\nThese factors previously made it challenging to debug or run test cases with pre-requisite steps. Our solution streamlines this process completely.\\n\\n**Pre-requisite search in test case details tab:**  \\n![pre-requisite search in test case details tab](pre-requisite-search-in-tc-detail.png)\\n\\n**Pre-requisite, once selected:**  \\n![Pre-requisite, once selected](pre-requisite-once-selected.png)\\n\\n**Rerun and pre-requisite selection from Testing > Run tests page:**  \\n![Rerun and pre-requisite selection from Testing > Run tests page](rerun-and-pre-requisite-in-run-test.png)\\n\\n## Rerun an Existing RunID\\n\\nUsers can now re-run an existing RunID or selected test cases within a RunID, addressing common operational challenges:\\n\\n1. When a test case fails due to a temporary issue, there\'s no need to rerun an entire test set of 1,000+ cases just to achieve a green RunID status.\\n2. If a node terminates prematurely before sending reports to the server (e.g., due to memory constraints), leaving test cases marked as \\"submitted\\" in the RunID, you can now easily rerun just those affected cases.\\n\\n**Search RunIDs for rerun (Testing > Run tests > Advanced settings):**  \\n![Search runids for rerun](search-runids-for-rerun.png)\\n\\n## Fail Analysis Report\\n\\nWhen multiple test cases fail, identifying root causes and avoiding duplicate bug reports can be challenging. Our Fail Analysis Report solves this by analyzing failed test steps for common failure patterns and grouping them intelligently.\\n\\nWhen one test case in a group is fixed, all related test cases should automatically resolve as long as the steps are global, dramatically improving efficiency.\\n\\n### How It Works\\n\\nAccess the report through **Testing > Reports > Fail Analysis** and create a filter for your analysis.\\n\\n![Fail analysis report: configure filter](fail-analysis-report-filter.gif)\\n\\n- Click on Filter to select Milestone, Version, or GitHub parameters\\n- In this example, we compare Milestone 2.9 with 2.8\\n- The system generates a comprehensive Fail Test Case Report\\n\\n![Description of card view](fail-analysis-card-view-description.png)\\n\\n**Card View Elements:**\\n\\n1. Test case title\\n2. Failed test case step\\n3. Failure reason\\n4. Assignee set\\n5. Assignee feature\\n6. Assignee milestone\\n7. Assignee version\\n8. Comment option (anyone can comment and reply)\\n9. Assignee priority\\n10. Assignee label\\n11. Assignee folder\\n\\n![Fail analysis: card list view](fail-analysis-card-list.png)\\n\\nYou can also view reports categorized by failure type.\\n\\n![Fail analysis: group by different category](fail-analysis-group-by.png)\\n\\n- Track pass/fail statuses at the top of the report\\n- Group reports by:\\n  1. Failed test case\\n  2. Set\\n  3. Assignee\\n- Switch between the Fail tab and the GitHub tab to find linked test cases with GitHub issue filters"}]}}')}}]);
"use strict";(self.webpackChunkzeuz_docs=self.webpackChunkzeuz_docs||[]).push([[8749],{91895:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"zeuz-platform-20250818","metadata":{"permalink":"/blog/zeuz-platform-20250818","source":"@site/blog/2025-08-18-zeuz-platform-20250818/index.md","title":"ZeuZ Platform 20250818","description":"Release date: August 18, 2025","date":"2025-08-18T00:00:00.000Z","tags":[{"inline":false,"label":"Changelog","permalink":"/blog/tags/changelog","description":"ZeuZ platform changelogs"}],"readingTime":8.31,"hasTruncateMarker":true,"authors":[{"name":"Muntasib Muhib Chowdhury","title":"Product Engineer","url":"https://github.com/Muntasib-creator","page":{"permalink":"/blog/authors/muhib"},"socials":{"x":"https://x.com/MuntasibC","linkedin":"https://www.linkedin.com/in/muhib-c/","github":"https://github.com/Muntasib-creator"},"imageURL":"https://github.com/Muntasib-creator.png","key":"muhib"},{"name":"Mohammed Sazid Al Rashid","title":"Technical Lead","url":"https://github.com/sazid","page":{"permalink":"/blog/authors/sazid"},"socials":{"x":"https://x.com/sazidz","linkedin":"https://www.linkedin.com/in/sazidz/","github":"https://github.com/sazid","newsletter":"https://sazid.github.io"},"imageURL":"https://github.com/sazid.png","key":"sazid"}],"frontMatter":{"slug":"zeuz-platform-20250818","title":"ZeuZ Platform 20250818","authors":["muhib","sazid"],"tags":["changelog"]},"unlisted":false,"nextItem":{"title":"ZeuZ Platform 20250712","permalink":"/blog/zeuz-platform-20250712"}},"content":"*Release date: August 18, 2025*\\r\\n\\r\\n---\\r\\n\\r\\nWelcome to the August 2025 release of the ZeuZ platform!\\r\\n\\r\\n## \ud83d\ude80 Features\\r\\n\\r\\n- **Dashboard Updates**: Compressed document URLs, Node & License Status section, Build Health enhancements, and GitHub integration with date-range filtering.\\r\\n- **Run Test Updates**: Improved Version Name Validation, Advanced Tab refinements, and Responsive Sidebar Layouts. Implemented sending external service reports only on fails.\\r\\n- **zAI Page Assistance**: Server-wide zAI enabled for contextual assistance, quick Q&A, and page-specific guidance.\\r\\n- **Close Tab**: Dual-driver support (Selenium + Playwright) for closing tabs by title, index, or active tab.  \\r\\n- **Accessibility Test**: Scan webpages for accessibility issues using axe-core, generating JSON and HTML reports.  \\r\\n- **Chrome Extension Download**: Install Chrome extensions of latest version and add with the automation browser during automation runs via extension-id list.  \\r\\n- **Data Store Updates**: Batch processing for multiple file uploads with single interaction is implemented.\\r\\n- **Unified \u201cLinks\u201d Tab**: Consolidated tabs for Requirements, Tasks, Bugs, and Test Cases in `Links` tab across multiple pages.  \\r\\n- **Set, History, and Fail Analysis Page Update**: Improved visual representation of pass, fail, block, etc., in donut charts with smooth pop-up details.  \\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## \ud83d\udc1b Bug Fixes\\r\\n\\r\\n- Resolved scheduler-related bugs and runtime parameters clipboard merging of variables and tag-values issue.  \\r\\n- Fixed `Take Screenshot` action failure and `maximize_window` in headless mode.  \\r\\n- Addressed Slack webhook notification and set import/export bugs.  \\r\\n\\r\\n---\\r\\n\\r\\n## \ud83d\ude80 Dashboard Updates\\r\\n\\r\\n### Summary\\r\\nThis update focuses on improving clarity, visual representation, and usability in the Dashboard. Key enhancements include cleaner document displays, consolidated build health data, and more informative legends, along with new sections for node and license status.\\r\\n\\r\\n### \u2728 Update Highlights\\r\\n\\r\\n- **Compressed Document URLs** \u2013 Cleaner, shortened display for easier reading\\r\\n- **Node & License Status Section** \u2013 Real-time display of node availability and license usage\\r\\n\\r\\n![Node & License status](node-license-dashboard.png)\\r\\n\\r\\n- **Build Health & Priority Comparisons** \u2013 Selected version/milestone segments now shown at the bottom right of graphs\\r\\n- **Enhanced Build Health Legends** \u2013 Legends now display both count and percentage\\r\\n- **Merged Build Health Categories** \u2013 Fail + Block = Fail, Submit + Skip = Not Run\\r\\n- **Scheduler Health Legend** \u2013 Added legend for better clarity in scheduler health graphs\\r\\n- **Storage Graph Legend with Counts** \u2013 Status counts are displayed in the storage graph legend\\r\\n- **Dashboard GitHub integration** \u2013 Quick stats: total tasks, bugs, requirements created/closed and PR open/closed/merged. PR & issue table. All data are filtered by date-range\\r\\n\\r\\n<video controls loop>\\r\\n  <source src=\\"/blog/zeuz-platform-20250818/dashboard-github-integration.mp4\\" type=\\"video/mp4\\" />\\r\\n</video>\\r\\n\\r\\n## \ud83e\uddea Run Test Updates\\r\\n\\r\\n### Summary\\r\\nThis update improves validation, refines component readability, and enhances layout adaptability for different sidebar sizes. Additionally, the option to notify external services only on failures has been restored in the advanced settings.\\r\\n\\r\\n### \u2728 Update Highlights\\r\\n\\r\\n- **Improved Version Name Validation** \u2013 More accurate checks to ensure valid version naming\\r\\n- **Advanced Tab Refinements** \u2013 Enhanced readability, cleaner layout, and restored \\"Notify External Services Only on Fail\\" option\\r\\n- **Responsive Sidebar Layouts** \u2013 Optimized appearance for both large and small sidebar configurations\\r\\n\\r\\n![Run test > Advanced settings - reorganized UI](run-test-reorganized-ui.png)\\r\\n\\r\\n## \u2728 zAI Page Assistance\\r\\n\\r\\n### Update Highlights\\r\\n -   zAI is now enabled server-wide as a contextual assistant for pages and workflows. \\r\\n -   Quick Q&A, page lookup, page-specific guidance. \\r\\n\\r\\n<video controls loop>\\r\\n  <source src=\\"/blog/zeuz-platform-20250818/zai-page-assist.mp4\\" type=\\"video/mp4\\" />\\r\\n</video>\\r\\n\\r\\n## \ud83d\udcf1 Android Support Details\\r\\n\\r\\n### Summary\\r\\nAdded comprehensive Android support for AI test case generation. Users can now select between web and Android platforms to generate automated test actions, significantly expanding ZAI\'s capabilities beyond web-only testing.\\r\\n\\r\\n### \u2728 Suported Actions\\r\\n\\r\\n- **Launch App** \u2013 Open Android applications using package name identifiers\\r\\n- **Enter Text** \u2013 Intelligent text input with AI-powered element location\\r\\n- **Click Element** \u2013 Interact with any UI element within Android applications\\r\\n- **Key Press** \u2013 Hardware key interactions including Enter, Volume, Mute, and Back keys\\r\\n- **Swipe to Element** \u2013 Automatic scrolling to reach off-screen elements (partially implemented)\\r\\n\\r\\n![zAI Chatbot - Android integration](zai-chatbot-android-integration.png)\\r\\n\\r\\n## Close Tab (Selenium + Playwright)\\r\\n\\r\\nClose tabs reliably by title, by index, or the current active tab. Uses Playwright over CDP when requested, with automatic Selenium fallback for robustness.\\r\\n\\r\\n### Key Benefits\\r\\n- **Dual-driver support:** Playwright via CDP or pure Selenium  \\r\\n- **Accurate tab selection:** Visual left-to-right order for index; filters non-page targets  \\r\\n- **Dynamic DevTools port:** Uses the live remote debugging port provided by the user.  \\r\\n\\r\\n### Example 1\\r\\n| Field       | Sub Field           | Value     |\\r\\n|-------------|---------------------|-----------|\\r\\n| playwright  | optional parameter  | True      |\\r\\n| close tab   | selenium action      | close tab |\\r\\n\\r\\n### Example 2\\r\\n| Field       | Sub Field           | Value                  |\\r\\n|-------------|---------------------|------------------------|\\r\\n| tab title   | input parameter     | [\'Zeuz\', \'Google\']     |\\r\\n| playwright  | optional parameter  | True                   |\\r\\n| close tab   | selenium action      | close tab              |\\r\\n\\r\\n### Example 3\\r\\n| Field       | Sub Field           | Value       |\\r\\n|-------------|---------------------|-------------|\\r\\n| tab index   | input parameter     | [0, 1, -1]  |\\r\\n| playwright  | optional parameter  | True        |\\r\\n| close tab   | selenium action      | close tab   |\\r\\n\\r\\nIf neither **tab title** nor **tab index** is provided, the current active tab is closed.\\r\\n\\r\\nWhen `playwright=true`, ZeuZ connects to the Selenium-launched Chrome via the dynamically detected CDP port and executes the close operation.\\r\\n\\r\\n<video controls loop>\\r\\n  <source src=\\"/blog/zeuz-platform-20250818/selenium-playwright-dual-driver-first-action.mp4\\" type=\\"video/mp4\\" />\\r\\n</video>\\r\\n\\r\\n## Accessibility Test\\r\\n\\r\\nScans currently rendered webpage in the webdriver for accessibility issues using **axe-core** via Selenium. Generates three reports: raw JSON, summarized JSON, and an HTML report with visual details.\\r\\n\\r\\n### Key Benefits\\r\\n- **Comprehensive checks:**  Powered by axe-core; validates against WCAG rules for accessibility.\\r\\n- **Debug accessibility issues:** Empowers developers to efficiently detect and address accessibility issues, facilitating the creation of more accessible website. \\r\\n- **Actionable output:** Summary JSON plus a human-friendly HTML report  \\r\\n- **CI-friendly:** Clear return values and structured logs for automation \\r\\n \\r\\n\\r\\n### Usage\\r\\n\\r\\n| Field             | Sub Field      | Value             |\\r\\n|-------------------|----------------|-------------------|\\r\\n| accessibility test | common action  | accessibility test |\\r\\n\\r\\n### Behavior\\r\\n- Uses existing Selenium session (`selenium_driver`) from shared variables  \\r\\n- Waits briefly for page assets to load, injects axe, and runs analysis  \\r\\n- Saves reports under **Accessibility Test Report/** with sanitized URL and timestamp  \\r\\n- Logs summary counts: violations, passes, inapplicable, incomplete  \\r\\n\\r\\n### Reports Generated\\r\\n- **Raw results (JSON):** `accessibility_result_{url}_{timestamp}.json`  \\r\\n- **Summary (JSON):** `accessibility_summary_{url}_{timestamp}.json`  \\r\\n- **Visual report (HTML):** `accessibility_report_{url}_{timestamp}.html`  \\r\\n- **Location:** `Accessibility Test Report/`  \\r\\n\\r\\n## Requirements\\r\\n- An active Selenium driver session must be available in shared variables   \\r\\n\\r\\n<video controls loop>\\r\\n  <source src=\\"/blog/zeuz-platform-20250818/web-accessibility-testing.mp4\\" type=\\"video/mp4\\" />\\r\\n</video>\\r\\n\\r\\n##  Chrome Extension Download\\r\\n\\r\\n### Summary\\r\\nBulk install Chrome extensions during automation runs via an extension-id list. The IDs can be picked from the Chrome Web Store. \\r\\n\\r\\n![Web automation - add multiple extensions via extension ID from Chrome Web Store](add-extension-with-id.png)\\r\\n\\r\\n### Use Case & Highlights\\r\\n-   Provide extension-id list in `Go To Link` action. the platform will download and attach those extensions to the Automation Test browser automatically. \\r\\n-   Speed up test setup for projects that rely on extensions (ad-blockers, proxies, custom dev extensions). \\r\\n\\r\\n## \u26a1 Data Store Updates\\r\\n\\r\\n### Summary\\r\\nEnhanced the Data Store functionality to support multiple file uploads simultaneously, with the ability to merge multiple files into a single table. The entire user interface has been modernized by jQuery, providing a more responsive and intuitive user experience.\\r\\n\\r\\n![Datastore - upload multiple CSVs](datastore-upload-multiple-csvs.png)\\r\\n\\r\\n### \u2728 Update Highlights\\r\\n- **Batch Processing**: Upload multiple files in one operation.\\r\\n- **File Merging**: Combine multiple data sources into unified tables.\\r\\n- **Enhanced Preview**: A comprehensive summary is displayed before the final upload.\\r\\n- **Streamlined Workflow**: The upload process is simplified with fewer steps and improved user guidance.\\r\\n\\r\\n## Some More Features\\r\\n- **New Variable `zeuz_tc_logs`** \u2013 Dedicated storage for test case errors and logging information\\r\\n- **Notifications (Discord & Slack)** \u2013 Templates simplified for readability. Important failed test cases displayed at the top. Links to testcases are included for quick triage.\\r\\n\\r\\n![New Discord/Slack notification style](new-discord-slack-notification-style.png)\\r\\n\\r\\n- **VM detection** \u2013 Automatic fallback to headless mode when a VM is detected and headless wasn\u2019t selected, reduces accidental GUI failures.\\r\\n\\r\\n## \ud83d\udc1b Bug Fix Updates\\r\\n\\r\\n- **Continue Point Value Import** \u2013 Resolved issue with continue point values not importing correctly\\r\\n- **Runtime Parameters Clipboard** \u2013 Fixed problem with pasting runtime parameters from clipboard\\r\\n- **AI Multiple-Action Validation** \u2013 Fixed multiple-action return values from AI not being properly checked\\r\\n- **Take Screenshot Action** \u2013 Fixed failure when `Take Screenshot` was the final action in a test step. \\r\\n- **Headless Window Size** \u2013 Fixed `maximize_window` in headless mode when the window size was unset (prevents headless runs from failing).\\r\\n\\r\\n## Unified \u201cLinks\u201d Tab Implementation Across Pages\\r\\n\\r\\n### Overview\\r\\nA major UI/UX restructuring was implemented across multiple pages to streamline navigation and improve usability. Multiple separate tabs for different linked item types have been merged into a single **\u201cLinks\u201d** tab. This reduces clutter, improves workflow efficiency, and keeps all related items in one place.\\r\\n\\r\\n### Changes Implemented\\r\\n\\r\\n#### 1. **Test Case Edit Page**\\r\\n- **Merged Tabs:**\\r\\n  - Requirement\\r\\n  - Tasks\\r\\n  - Bugs\\r\\n  \u2192 **Now all accessible from the new \u201cLinks\u201d tab**\\r\\n\\r\\n![Link items - test case edit](link-items-tc.png)\\r\\n\\r\\n\\r\\n#### 2. **Requirement Page**\\r\\n- **Merged Tabs:**\\r\\n  - Test Case\\r\\n  - Tasks\\r\\n  - Bugs  \\r\\n  \u2192 **Now all accessible from the new \u201cLinks\u201d tab**\\r\\n\\r\\n![Link items - requirement](link-items-req.png)\\r\\n\\r\\n#### 3. **Bug Page**\\r\\n- **Merged Tabs:**\\r\\n  - Test Case\\r\\n  - Tasks\\r\\n  - Requirements  \\r\\n  \u2192 **Now all accessible from the new \u201cLinks\u201d tab**\\r\\n\\r\\n![Link items - bug](link-items-bug.png)\\r\\n\\r\\n#### 4. **Task Page**\\r\\n- **Merged Tabs:**\\r\\n  - Test Case\\r\\n  - Requirements\\r\\n  - Bugs  \\r\\n  \u2192 **Now all accessible from the new \u201cLinks\u201d tab**\\r\\n\\r\\n![Link items - task](link-items-task.png)\\r\\n\\r\\n### Unified \u201cLinks\u201d Tab Features\\r\\n- Single consolidated table for Requirements, Tasks, Bugs, and Test Cases.\\r\\n- Type icons for easy identification.\\r\\n- Unified search, filter, and sorting across all linked items.\\r\\n- Create, link, and manage items directly from one tab.\\r\\n- Bulk selection and relationship management.\\r\\n- Fully responsive and mobile-friendly design.\\r\\n\\r\\n### Benefits\\r\\n- **Reduced complexity** \u2013 fewer tabs to navigate.\\r\\n- **Improved workflow** \u2013 manage all related items from one location.\\r\\n- **Better organization** \u2013 logical grouping of related functionality.\\r\\n- **Preserved existing features** \u2013 all functionality from previous tabs is available in the unified view.\\r\\n\\r\\n## \ud83d\ude80 Set, History, and Fail Analysis Page Update\\r\\n\\r\\nThis update improves the visual representation of **pass**, **fail**, **block**, **in progress**, **skip**, and **submit** data in the donut charts and summary donut chart on the **Set**, **History**, and **Fail Analysis** pages. Now, all relevant data is displayed in a single, smooth pop-up chart for better clarity and user experience.\\r\\n\\r\\n### Update Highlights\\r\\n\\r\\n- **Relevant Data in One Chart** \u2013 View all related information in one consolidated pop-up chart.  \\r\\n- **Smooth Pop-up** \u2013 The pop-up appears instantly when you hover anywhere inside the donut charts.\\r\\n\\r\\n<video controls loop>\\r\\n  <source src=\\"/blog/zeuz-platform-20250818/run-history-improved-chart-popup.mp4\\" type=\\"video/mp4\\" />\\r\\n</video>"},{"id":"zeuz-platform-20250712","metadata":{"permalink":"/blog/zeuz-platform-20250712","source":"@site/blog/2025-07-12-zeuz-platform-20250712/index.md","title":"ZeuZ Platform 20250712","description":"Release date: July 12, 2025","date":"2025-07-12T00:00:00.000Z","tags":[{"inline":false,"label":"Changelog","permalink":"/blog/tags/changelog","description":"ZeuZ platform changelogs"}],"readingTime":3.09,"hasTruncateMarker":true,"authors":[{"name":"Tanvir Hossain Antu","title":"Product Engineer","url":"https://github.com/Antu7","page":{"permalink":"/blog/authors/antu"},"socials":{"x":"https://x.com/antu_tanvir","linkedin":"https://www.linkedin.com/in/antu7/","github":"https://github.com/antu7","newsletter":"https://antu7.github.io"},"imageURL":"https://github.com/Antu7.png","key":"antu"},{"name":"Mohammed Sazid Al Rashid","title":"Technical Lead","url":"https://github.com/sazid","page":{"permalink":"/blog/authors/sazid"},"socials":{"x":"https://x.com/sazidz","linkedin":"https://www.linkedin.com/in/sazidz/","github":"https://github.com/sazid","newsletter":"https://sazid.github.io"},"imageURL":"https://github.com/sazid.png","key":"sazid"}],"frontMatter":{"slug":"zeuz-platform-20250712","title":"ZeuZ Platform 20250712","authors":["antu","sazid"],"tags":["changelog"]},"unlisted":false,"prevItem":{"title":"ZeuZ Platform 20250818","permalink":"/blog/zeuz-platform-20250818"},"nextItem":{"title":"ZeuZ Platform 20250518","permalink":"/blog/zeuz-platform-20250518"}},"content":"*Release date: July 12, 2025*\\r\\n\\r\\n---\\r\\n\\r\\nWelcome to the July 2025 release of the ZeuZ platform! \ud83d\ude80 This release brings significant improvements to browser testing, AI capabilities, test case management, scheduling, and dashboard features.\\r\\n\\r\\n## \ud83d\ude80 Features\\r\\n\\r\\n- Test case export/import can now handle test case and step attachments\\r\\n- Scheduler page redesigned\\r\\n- Release report: GitHub issue type filter added\\r\\n- Release report: Added date range filtering for GitHub pull requests\\r\\n- Pre-requisite test case assignment in test case search and test set pages\\r\\n- ZeuZ Node installation and connection help video in dashboard\\r\\n- Enhanced ZAI Chatbot with Q&A, history, and improved capabilities\\r\\n- Minor UI and feature updates/fixes\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## \ud83d\udc1b Bug Fixes\\r\\n\\r\\n- Fixed test case import for expected and description fields\\r\\n- Resolved scheduler-related bugs (multiple fixes)\\r\\n- Fixed runtest version issue\\r\\n- Resolved \\"/\\" character issue in names\\r\\n- Fixed watch.mjs file issue\\r\\n- Implemented datastore team/project separation\\r\\n- Resolved set import dropdown filter bug\\r\\n- Fixed set export to JSON bug\\r\\n- Fixed Slack webhook notification implementation\\r\\n- Enabled iframe embeds for embedding ZeuZ into dashboads for reporting\\r\\n\\r\\n---\\r\\n\\r\\n## Chrome for Testing\\r\\n\\r\\nTest your web applications across any specific version of Chrome, including pre-release builds (Dev, Beta, Canary). ZeuZ now provides complete browser version control with automated version management.\\r\\n\\r\\n**Key Benefits:**\\r\\n- Validate cross-version compatibility\\r\\n- Pinpoint bugs in specific Chrome builds\\r\\n- Test against upcoming Chrome features\\r\\n- Fully automated version-targeted testing\\r\\n\\r\\n**Usage:** Add a chrome:version parameter to your \\"Go to link\\" action:\\r\\n\\r\\n| Field | Sub Field | Value |\\r\\n|--|--|--|\\r\\n| chrome:version | optional parameter | **%\\\\|my_version\\\\|%** or **125.0.6382.0** |\\r\\n\\r\\n**Smart Version Management:**\\r\\n- Auto-cleanup unused versions after 90 days\\r\\n- Latest version auto-updates every 7 days\\r\\n- Automatic download and installation of Chrome and ChromeDriver\\r\\n\\r\\n<video controls loop>\\r\\n  <source src=\\"/blog/zeuz-platform-20250712/463816684-44b90f6f-bf8b-45d3-a89c-0216e2aafbb4.mp4\\" type=\\"video/mp4\\" />\\r\\n</video>\\r\\n\\r\\n---\\r\\n\\r\\n## Enhanced ZAI Chatbot\\r\\n\\r\\nZAI, your AI-powered testing assistant, now features improved memory and knowledge capabilities for more personalized and accurate responses.\\r\\n\\r\\n**New Features:**\\r\\n- **Smarter Memory:** Saves chat history for personalized, coherent responses\\r\\n- **Knowledge-Powered Answers:** Real-time answers from product documentation and knowledge base\\r\\n\\r\\n![ZAI Chatbot demo](463820915-c1f8d7ca-a7fc-43de-bfd9-e18f3f29b753.png)\\r\\n\\r\\n## ZIP Import for Test Cases\\r\\n\\r\\nComprehensive ZIP import functionality now supports test cases with all related attachments, improving data integrity and providing a complete import/export experience.\\r\\n\\r\\n**Features:**\\r\\n- Import test cases from ZIP files with structured folder support\\r\\n- Embedded metadata (index.json) handling\\r\\n- Test case and step-level attachment processing\\r\\n- Automatic ID mapping and database integration\\r\\n- Full backward compatibility with JSON imports\\r\\n\\r\\n**Supported File Structure:**\\r\\n```\\r\\nTestCases_backup_export.zip\\r\\n\u251c\u2500\u2500 index.json\\r\\n\u2514\u2500\u2500 test_cases/\\r\\n    \u2514\u2500\u2500 {tc_id}/\\r\\n        \u251c\u2500\u2500 tc.json\\r\\n        \u251c\u2500\u2500 attachments/\\r\\n        \u2502   \u251c\u2500\u2500 file1.pdf\\r\\n        \u2502   \u2514\u2500\u2500 file2.csv\\r\\n        \u2514\u2500\u2500 steps_attachments/\\r\\n            \u2514\u2500\u2500 step_{step_id}/\\r\\n                \u251c\u2500\u2500 step_file1.csv\\r\\n                \u2514\u2500\u2500 step_file2.txt\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## Enhanced Scheduler Management\\r\\n\\r\\nStreamlined scheduler experience with in-context interactions and bulk operations, eliminating page reloads for better workflow efficiency.\\r\\n\\r\\n**New Capabilities:**\\r\\n- **Inline Creation & Editing:** Modal-based scheduler management from the Schedule List page\\r\\n- **Step-by-Step Creation:** Guided modal for efficient scheduler setup\\r\\n- **Editable Details:** View and update scheduler information without page navigation\\r\\n- **Bulk Operations:** Select multiple schedulers for activate/deactivate actions\\r\\n- **Run History Access:** Popup view of recent run history with full history navigation\\r\\n\\r\\n<video controls loop>\\r\\n  <source src=\\"/blog/zeuz-platform-20250712/464002801-d5f18d77-886e-49aa-b9d0-0e03ecf8ed7d.mp4\\" type=\\"video/mp4\\" />\\r\\n</video>\\r\\n\\r\\n## ZeuZ Dashboard\\r\\n\\r\\nCentral hub providing comprehensive overview of your automation ecosystem with execution engines, test metrics, and storage insights.\\r\\n\\r\\n<video controls loop>\\r\\n  <source src=\\"/blog/zeuz-platform-20250712/464026255-32f99fe1-df37-413a-a869-925113da4c55.mov\\" type=\\"video/mp4\\" />\\r\\n</video>\\r\\n\\r\\n**Dashboard Components:**\\r\\n\\r\\n**ZeuZ Node Management:**\\r\\n- One-click ZeuZ Node download\\r\\n- Platform-specific connection guides (Windows, Mac, Linux)\\r\\n- Quick access to Node, Server, Changelog, and Documentation\\r\\n\\r\\n**Build Health Monitoring:**\\r\\n- View health by milestones or versions\\r\\n- Pass/Fail metrics with visual percentages\\r\\n- Hover for detailed counts and percentages\\r\\n\\r\\n**Automatability Overview:**\\r\\n- Donut chart visualization of test case categories\\r\\n- Color-coded automation status tracking"},{"id":"zeuz-platform-20250518","metadata":{"permalink":"/blog/zeuz-platform-20250518","source":"@site/blog/2025-05-18-zeuz-platform-20250518/index.md","title":"ZeuZ Platform 20250518","description":"Release date: May 18, 2025","date":"2025-05-18T00:00:00.000Z","tags":[{"inline":false,"label":"Changelog","permalink":"/blog/tags/changelog","description":"ZeuZ platform changelogs"}],"readingTime":5.66,"hasTruncateMarker":true,"authors":[{"name":"Mohammed Sazid Al Rashid","title":"Technical Lead","url":"https://github.com/sazid","page":{"permalink":"/blog/authors/sazid"},"socials":{"x":"https://x.com/sazidz","linkedin":"https://www.linkedin.com/in/sazidz/","github":"https://github.com/sazid","newsletter":"https://sazid.github.io"},"imageURL":"https://github.com/sazid.png","key":"sazid"}],"frontMatter":{"slug":"zeuz-platform-20250518","title":"ZeuZ Platform 20250518","authors":["sazid"],"tags":["changelog"]},"unlisted":false,"prevItem":{"title":"ZeuZ Platform 20250712","permalink":"/blog/zeuz-platform-20250712"}},"content":"*Release date: May 18, 2025*\\r\\n\\r\\n---\\r\\n\\r\\nWelcome to the May 2025 release of the ZeuZ platform! \ud83d\ude80 We\'re thrilled to introduce several powerful updates that will enhance your testing experience. Key highlights include:\\r\\n\\r\\n**Features**\\r\\n\\r\\n- \u2728 Seamless ZeuZ Node connection\\r\\n- \ud83d\udd0d AI-Powered Mobile inspector\\r\\n- \ud83d\udd2e Variable viewer in Debug page\\r\\n- \ud83d\udcca AI-Powered Release report summary\\r\\n- \ud83d\udd04 Pre-requisite test case functionality\\r\\n- \ud83d\udd01 Rerun existing RunID capability\\r\\n- \ud83d\udcc8 Fail analysis reporting\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n**Bug Fixes**\\r\\n\\r\\n- Fixed report generation issues when GitHub integration is missing in Testing > Reports > Release Report\\r\\n- Resolved step section slider visibility problems in Testing > Testcase > Create Testcase caused by table insertions in Description or Expected fields\\r\\n- Corrected global attachments scope\\r\\n- Fixed Build-to-Build comparison bugs in Testing > Reports > Execution\\r\\n\\r\\n**Enhancements**\\r\\n\\r\\n- Improved assignee user search functionality in Testing > Reports > Fail Analysis\\r\\n- Optimized page load time and performance in Testing > History\\r\\n- Fixed incorrect team/project feature display in Project > Create/Edit > Task, Bug & Requirement pages\\r\\n- Enhanced UI in Testing > Deployments > History & Set page\\r\\n- Restricted Datastore access by team/project for better security\\r\\n- Streamlined GitHub issue linking process\\r\\n- Updated Run Queue feature and UI in Testing > Deployments > History\\r\\n- Added Storybook Integration for UI Components\\r\\n- Enhanced Donut Charts and fixed Total Value in Testing > Deployments > Set/History\\r\\n- Implemented Automatic Default Filter for Fail Analysis Report\\r\\n- Redesigned border color for clarity in Testing > Reports > Fail Analysis\\r\\n- Updated Run History border color to reflect test case status in Testing > Test case edit pages\\r\\n\\r\\n## Seamless ZeuZ Node Connection\\r\\n\\r\\nConnect your ZeuZ Node effortlessly without the hassle of launching a terminal or copying and pasting commands. The process is now completely streamlined!\\r\\n\\r\\n[View the accompanying ZeuZ Node release](https://github.com/AutomationSolutionz/Zeuz_Python_Node/releases/tag/v20.0.0)\\r\\n\\r\\n<video controls loop>\\r\\n  <source src=\\"/blog/zeuz-platform-20250518/Connect ZeuZ Node.mp4\\" type=\\"video/mp4\\" />\\r\\n</video>\\r\\n\\r\\n## AI-Powered Mobile Inspector\\r\\n\\r\\nInspect Android\u2122 applications directly within ZeuZ Server without installing additional tools like Appium Inspector or Android uiautomatorviewer.\\r\\n\\r\\nSay goodbye to hours of setup frustration! Simply connect your mobile device or launch an emulator, run ZeuZ Node, and connect to ZeuZ Server. Everything else is handled automatically. This also solves a persistent challenge:\\r\\n\\r\\n> No more restarting the adb server after each inspection through Appium/uiautomatorviewer.\\r\\n\\r\\n**Features:**\\r\\n\\r\\n1. **Enhanced Screenshot and Element Tree Detection:** Improved accuracy in detecting and displaying UI elements\\r\\n2. **Dedicated Attribute List Panel:** Right-side panel for comprehensive element attribute inspection\\r\\n3. **Powerful Search Functionality:** Use **Ctrl+F** to search by CSS, XPath, or value\\r\\n4. **Dual DOM Support:** Both ADB and Appium now provide DOM access, eliminating inspection barriers when the Appium server is active\\r\\n\\r\\n![Mobile inspector](mobile-inspector.png)\\r\\n\\r\\n## Variable Viewer in Debug Page\\r\\n\\r\\nWhen debugging test cases, users often need to inspect current ZeuZ node variables to build further actions. Our new hierarchical tree view of variables provides a clean, intuitive interface for navigating complex data structures. Variables are displayed in three distinct formats:\\r\\n\\r\\n1. **JSON Object Variables:** Standard JSON-compatible variables with reasonably sized values\\r\\n2. **JSON Schema Variables:** Large JSON variables truncated for readability and presented as schemas\\r\\n3. **Non-JSON Variables:** Non-JSON objects (e.g., Python modules, WebDriver instances, WebDriver elements) with up to 200 properties displayed\\r\\n4. **Oversized Values:** Variables with excessively large values are omitted for performance optimization\\r\\n\\r\\n![Debug variable viewer](debug-variables.png)\\r\\n\\r\\n## AI-Powered Release Report Summary\\r\\n\\r\\nOur intelligent report summary component analyzes release data and presents key insights through a modern UI. This feature enables stakeholders to quickly assess release impact, quality, and notable changes without wading through lengthy detailed reports.\\r\\n\\r\\n![AI-Powered release report summary](ai-powered-release-report-summary.png)\\r\\n\\r\\n## Pre-requisite Test Case\\r\\n\\r\\nThis powerful new feature allows one test case to specify another as its pre-requisite. When a test case is deployed, its pre-requisite test case executes first.\\r\\n\\r\\nWhen multiple test cases share a common pre-requisite and are deployed together, the pre-requisite executes only once throughout the entire RunID (run session), improving efficiency.\\r\\n\\r\\nThe system intelligently prevents cyclic dependencies during both link time and deployment time.\\r\\n\\r\\n**Background:**\\r\\n\\r\\n- Testers typically need pre-test setup like data preparation or environment configuration. Previously, users relied on set re-ordering to ensure pre-setup tests ran first.\\r\\n- Some test sets contain multiple test case groups with their own pre-requisites.\\r\\n- Test cases with pre-requisites may appear in multiple sets.\\r\\n\\r\\nThese factors previously made it challenging to debug or run test cases with pre-requisite steps. Our solution streamlines this process completely.\\r\\n\\r\\n**Pre-requisite search in test case details tab:**  \\r\\n![pre-requisite search in test case details tab](pre-requisite-search-in-tc-detail.png)\\r\\n\\r\\n**Pre-requisite, once selected:**  \\r\\n![Pre-requisite, once selected](pre-requisite-once-selected.png)\\r\\n\\r\\n**Rerun and pre-requisite selection from Testing > Run tests page:**  \\r\\n![Rerun and pre-requisite selection from Testing > Run tests page](rerun-and-pre-requisite-in-run-test.png)\\r\\n\\r\\n## Rerun an Existing RunID\\r\\n\\r\\nUsers can now re-run an existing RunID or selected test cases within a RunID, addressing common operational challenges:\\r\\n\\r\\n1. When a test case fails due to a temporary issue, there\'s no need to rerun an entire test set of 1,000+ cases just to achieve a green RunID status.\\r\\n2. If a node terminates prematurely before sending reports to the server (e.g., due to memory constraints), leaving test cases marked as \\"submitted\\" in the RunID, you can now easily rerun just those affected cases.\\r\\n\\r\\n**Search RunIDs for rerun (Testing > Run tests > Advanced settings):**  \\r\\n![Search runids for rerun](search-runids-for-rerun.png)\\r\\n\\r\\n## Fail Analysis Report\\r\\n\\r\\nWhen multiple test cases fail, identifying root causes and avoiding duplicate bug reports can be challenging. Our Fail Analysis Report solves this by analyzing failed test steps for common failure patterns and grouping them intelligently.\\r\\n\\r\\nWhen one test case in a group is fixed, all related test cases should automatically resolve as long as the steps are global, dramatically improving efficiency.\\r\\n\\r\\n### How It Works\\r\\n\\r\\nAccess the report through **Testing > Reports > Fail Analysis** and create a filter for your analysis.\\r\\n\\r\\n![Fail analysis report: configure filter](fail-analysis-report-filter.gif)\\r\\n\\r\\n- Click on Filter to select Milestone, Version, or GitHub parameters\\r\\n- In this example, we compare Milestone 2.9 with 2.8\\r\\n- The system generates a comprehensive Fail Test Case Report\\r\\n\\r\\n![Description of card view](fail-analysis-card-view-description.png)\\r\\n\\r\\n**Card View Elements:**\\r\\n\\r\\n1. Test case title\\r\\n2. Failed test case step\\r\\n3. Failure reason\\r\\n4. Assignee set\\r\\n5. Assignee feature\\r\\n6. Assignee milestone\\r\\n7. Assignee version\\r\\n8. Comment option (anyone can comment and reply)\\r\\n9. Assignee priority\\r\\n10. Assignee label\\r\\n11. Assignee folder\\r\\n\\r\\n![Fail analysis: card list view](fail-analysis-card-list.png)\\r\\n\\r\\nYou can also view reports categorized by failure type.\\r\\n\\r\\n![Fail analysis: group by different category](fail-analysis-group-by.png)\\r\\n\\r\\n- Track pass/fail statuses at the top of the report\\r\\n- Group reports by:\\r\\n  1. Failed test case\\r\\n  2. Set\\r\\n  3. Assignee\\r\\n- Switch between the Fail tab and the GitHub tab to find linked test cases with GitHub issue filters"}]}}')}}]);